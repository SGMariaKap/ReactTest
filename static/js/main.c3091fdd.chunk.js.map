{"version":3,"sources":["Table.js","Form.js","Login.js","Header.js","App.js","index.js"],"names":["TableHeader","React","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","initialState","state","handleChange","event","_event$target","target","value","setState","_defineProperty","submitForm","handleSubmit","_inherits","_createClass","_this$state","htmlFor","type","id","onChange","Component","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Login","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_ref","_asyncToGenerator","_callee","e","response","data","_context","preventDefault","fetch","headers","Content-Type","body","JSON","stringify","json","success","window","location","href","alert","message","_x","onSubmit","Header","className","App","characters","filter","character","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3091fdd.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Job</th>\n        </tr>\n      </thead>\n    )\n  }\n\n  const TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n      return (\n        <tr key={index}>\n            <td>{row.name}</td>\n            <td>{row.job}</td>\n            <td>\n                <button onClick={() => props.removeCharacter(index)}>Delete</button>\n            </td>\n        </tr>\n      )\n    })\n  \n    return <tbody>{rows}</tbody>\n  }\n  \nconst Table = (props) => {\n    const {characterData, removeCharacter} = props;\n    return (\n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n      </table>\n    )\n  \n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: '',\n    }\n    state = this.initialState;\n    handleChange = (event) => {\n        const {name, value} = event.target;\n    \n        this.setState({\n            [name]:value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n      }\n\n    render() {\n        const {name, job} = this.state;\n        return(\n            <form>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              onChange={this.handleChange} />\n            <label htmlFor=\"job\">Job</label>\n            <input\n              type=\"text\"\n              name=\"job\"\n              id=\"job\"\n              value={job}\n              onChange={this.handleChange} />\n              <br/>\n              <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n\n          </form>\n        );\n    }\n}\n\nexport default Form;","import React, { useState } from 'react';\n\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password }),\n    });\n    const data = await response.json();\n    if (data.success) {\n      // Redirect the user to their dashboard or home page\n      window.location.href = '/dashboard';\n    } else {\n      // Display an error message to the user\n      alert(data.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Username:\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      </label>\n      <label>\n        Password:\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </label>\n      <button type=\"submit\">Log in</button>\n    </form>\n  );\n}\n\nexport default Login;","import React, { Component } from 'react'\n\nclass Header extends Component {\n    \n    render() {\n        return(\n            <header className='page-header'></header>\n        );\n    }\n}\n\nexport default Header;","\nimport React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport Login from './Login'\nimport Header from './Header'\n\n\n\nclass App extends Component {\n  state = {\n    characters: [],\n  }\n  removeCharacter = (index) => {\n    const { characters } = this.state\n  \n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] })\n  }\n    render() {\n      const { characters } = this.state\n      return (\n        <div className=\"container\">\n        <Header/>\n        <h1>React test</h1>\n        <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n        <Form handleSubmit={this.handleSubmit}/>\n        <Login />\n        <div id=\"root2\"></div>\n\n        </div>\n      )\n    }\n  }\n\n\n\n\n\n\n/*app.appendChild(logo)\napp.appendChild(container)*/\n\n\n  export default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}